<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties" />
	</bean>

	<bean id="dataSourceSpied"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	<constructor-arg ref="dataSourceSpied" />
	<property name="logFormatter">
		<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
			<property name="loggingType" value="MULTI_LINE" />
			<property name="sqlPrefix" value="SQL:::" />
		</bean>
	</property>
</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatisConfig/mybatisConfig.xml" />
		<property name="mapperLocations" value="classpath:/com/pknu/mapper/**/*.xml"></property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- <bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="bbsDao"> 
		<property name="mapperInterface" value="com.pknu.bbs.bbs.dao.BBSDao"/> <property 
		name="sqlSessionFactory" ref="sqlSessionFactory"/> </bean> <bean class="org.mybatis.spring.mapper.MapperFactoryBean" 
		id="commentDao"> <property name="mapperInterface" value="com.pknu.bbs.comment.dao.CommentDao"/> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/> </bean> -->
	<mybatis-spring:scan base-package="com.pknu.bbs.bbs.dao, com.pknu.bbs.comment.dao" />
	<!-- 서블릿에서 스캔한 빈과 중복되어서 에러발생 -->
	<!-- <mybatis-spring:scan base-package="com.pknu.bbs"/> -->
	<!-- ======================== -->

	<bean id="pageSize" class="java.lang.Integer">
		<constructor-arg>
			<value>10</value>
		</constructor-arg>
	</bean>
	<bean id="pageBlock" class="java.lang.Integer">
		<constructor-arg value="10"></constructor-arg>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="20000000" />
	</bean>
	<bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg>
			<value>d:/uploadKch/</value>
		</constructor-arg>
	</bean>
	
<!-- Transaction Manager --> 
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
	<property name="dataSource" ref="dataSource" /> 
</bean> 
<tx:annotation-driven transaction-manager="transactionManager" />


</beans>
